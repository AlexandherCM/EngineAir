
            //Type type = typeof(T);

            //// Obtener el DbSet correspondiente mediante Reflection
            //var dbSet = _context.GetType().GetMethod("Set").MakeGenericMethod(type).Invoke(_context, null);
            //// Verificar si existe un elemento con el nombre especificado
            //bool existente = (bool)dbSet.GetType().GetMethod("Any").Invoke(dbSet, new object[] { $"Nombre == \"{marca.Nombre}\"" });

            //if (existente)
            //{
            //    _alertaEstado.Leyenda = "¡Ya existe un estatus con ese nombre!";
            //    _alertaEstado.Estado = false;
            //    return _alertaEstado;
            //}


            

        //[HttpPost] 
        //[ValidateAntiForgeryToken]
        //[Authorize(Roles = "ADM, GRL")]
        //public async Task<IActionResult> CreateBrand(MarcaTipo MarcaTipo) 
        //{
        //    _alertaEstado = await _service.CreateBrand(MarcaTipo);
        //    ViewBag.Alerta = _alertaEstado;

        //    return MarcaTipo.Entidad switch
        //    {
        //        "MarcaMotor" => 
        //            View(nameof(Motor)),
        //        "MarcaHelice" => 
        //            View(nameof(Helice)),
        //        "Tipo" => 
        //            View(nameof(Variante)),
        //        _ => 
        //            RedirectToAction("Index", "Home"),
        //    };
        //}   




        // Insertar datos en la tabla Perfil
            migrationBuilder.InsertData(
                table: "Perfil",
                columns: new[] { "ID", "Nombre" },
                values: new object[] { "ADM", "Administrador" });

            migrationBuilder.InsertData(
                table: "Perfil",
                columns: new[] { "ID", "Nombre" },
                values: new object[] { "GRL", "Gestor de servicios" });

            // Insertar datos en la tabla Usuario
            migrationBuilder.InsertData(
                table: "Usuario",
                columns: new[] { "PerfilID", "Nombre", "Correo", "Clave" },
                values: new object[] { "ADM", "Alexandher Cordoba", "alexandhercordoba378@gmail.com", "123456" });

            migrationBuilder.InsertData(
                table: "Usuario",
                columns: new[] { "PerfilID", "Nombre", "Correo", "Clave" },
                values: new object[] { "GRL", "Carlos Ivan", "carlosivanlopez@gmail.com", "654321" });





                public async Task<List<ModeloMotor>> GetModelosMotores()
    => await _unitOfWork.ModeloMotor.GetList(_unitOfWork._context.ModeloMotor, x => x.Marca);